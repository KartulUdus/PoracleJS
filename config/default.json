{
  // This is the Poracle default configuration settings. Do not change this file,
  // it is updated when new config parameters are added

  // Copy any sections you wish to modify your local.json

  // Server settings
  //  -- host name to listen on 127.0.0.1 only localhost; 0.0.0.0 would be in all network interfaces
  //  ipWhitelist, ipBlacklist - array of whitelisted or blacklisted  addresses

  "server": {
    "host": "127.0.0.1",
    "port": "3030",
    "ipWhitelist": [],
    "ipBlacklist": []
  },

  // These are general parameters
  //
  // alertMinimumTime - time inside which alerts will not be generated (120s - 2mins before expiration no alert)
  // imgUrl - base url for poracle creation of {{imgUrl}} reference
  // stickerUrl - base url for poracle creation of {{stickerUrl}} reference for telegram webp stickers
  // locale
  // disabledCommands - array of commands to disable
  // disableXXX - disables individual hook processing for particular scanner webhook types
  // roleCheckDeletionsAllowed
  // availableLanguages
  // - This is an array of available languages that users can swap between using the !language command
  // - Each language can have it's own call word which pre-sets that language, and you also define the help text
  // - command so that Poracle can always answer help in native language regardless of the users current settings
  // An example might be:
  //         "availableLanguages": {
  //            "en": {"poracle": "poracle", "help": "help" },
  //            "de": {"poracle": "dasporacle", "help": "hilfe" },
  //            "fr": {"poracle": "leporacle", "help": "aide" }
  //        },
  // defaultTemplateName
  // persistDuplicateCache - whether to store the webhook duplicate cache on exit. If you have a busy system
  //   this could be very large and slow down shutdown (many gigabytes) and startup. This is stored in the .cache
  //   directory

  "general": {
      "environment": "production",
      "alertMinimumTime" : 120,
      "imgUrl": "https://raw.githubusercontent.com/nileplumb/PkmnShuffleMap/master/PMSF_icons_large/",
      "stickerUrl": "https://raw.githubusercontent.com/whitewillem/PogoAssets/resized/icons_large/telegram/",
      "locale": "en",
      "disabledCommands": [],
      "disablePokemon": false,
      "disableRaid": false,
      "disableInvasion": false,
      "disablePokestop": false,
      "disableQuest": false,
      "disableWeather": false,
      "roleCheckDeletionsAllowed": false,
      "availableLanguages": {
      },
      "defaultTemplateName": 1,
      "persistDuplicateCache": false
  },

  //
  // Log levels - silly, debug, verbose, info, warn
  //
  // consoleLogLevel - this is the level displayed on the screen (and perhaps in pm2 or systemd logs if you run that
  // way)
  // logLevel - this is the log level on disk, affecting all logs
  // enableLogs - can turn on/off three optional logs
  // dailyLogLimit - the number of days to keep the daily logs (everything aside from webhooks)
  // webhookLogLimit - the number of hours to keep the webhook logs, if enabled
  //
  // Suggestion - start at verbose, info will be a bit less logging. If you are trying to track down an issue
  // debug has more detail.

  "logger": {
      "consoleLogLevel": "verbose",
      "logLevel": "verbose",
      "enableLogs": {
        "webhooks": false,
        "discord": true,
        "telegram": true
      },
      "dailyLogLimit": 7,
      "webhookLogLimit": 12
  },
  //
  // Database connection strings.  client can be mysql or sqlite3, but PoracleWeb only
  //    works with mysql, so...
  //
  "database": {
      "client": "mysql",
      "conn": {
          "host": "127.0.0.1",
          "database": "poracle",
          "user": "poracleuser",
          "password": "poraclepassword",
          "port": 3306
      }
  },
  "locale": {
      "timeformat": "en-gb",
      "time": "LTS",
      "addressFormat": "{{{streetName}}} {{streetNumber}}",
      "language": "en"
  },

  //
  // Geofence - default format is that created here http://geo.jasparke.net/ - named fence
  //   You can also use a geojson file if you would like to share with other tools but you
  //   need to add the 'name' field. If a single
  //   area you can use the default geofence name here
  //

  "geofence": {
      "path": "./config/geofence.json",
      "defaultGeofenceName": "city",
      "defaultGeofenceColor": "#3399ff"
  },

  //
  // Weather support
  // weatherChangeAlert - To enable or disable the weather change alerts
  // showAlteredPokemon - Track weather changed pokémon to be able to be shown in DTS
  // showAlteredPokemonStaticMap - Show weather changed on static map
  // showAlteredPokemonMaxCount - Max number of changed pokémon allowed per alert
  // enableWeatherForecast - To enable or disable weather forecast (using accuweather)
  // apiKeyAccuWeather - AccuWeather API keys
  // apiKeyDayQuota - Maximum API calls allowed per day
  // smartForecast - use smart update of weather forecast (pull on demand if no weather data available for
  //    a given cell, otherwise will wait for next standard refresh)
  // localFirstFetchHOD - First hour of the day for the first API call (3am local seems best)
  // forecastRefreshInterval - API call interval

  "weather": {
      "weatherChangeAlert": false,
      "showAlteredPokemon": false,
      "showAlteredPokemonStaticMap": false,
      "showAlteredPokemonMaxCount": 10,
      "enableWeatherForecast": false,
      "apiKeyAccuWeather": ["key1", "key2", "key3"],
      "apiKeyDayQuota": 50,
      "smartForecast": false,
      "localFirstFetchHOD": 3,
      "forecastRefreshInterval": 8
  },
  //
  // PVP tracking fine tuning
  // pvpEvolutionDirectTracking - whether users can track pvp evolutions directly (eg vaporean
  //   would match an eevee)
  // pvpDisplay* - these are variables that will be passed into DTS to allow you to perform
  //   a filtering calculation
  // pvpFilter* - these filters are used as minimums on the track command to help users get
  //   PVP tracking right and to eliminate unexpectedly large tracks
  //
  "pvp": {
      "pvpEvolutionDirectTracking": false,
      "pvpDisplayMaxRank": 10,
      "pvpDisplayGreatMinCP": 1450,
      "pvpDisplayUltraMinCP": 2450,
      "pvpFilterMaxRank": 10,
      "pvpFilterGreatMinCP": 1450,
      "pvpFilterUltraMinCP": 2450
  },
  // everything restrictions:
  //   * tbc (change coming)
  // defaultDistance - if you are doing distance tracking only, this is a default for users
  // maxDistance - restrict users from having too large a tracking circle
  "tracking": {
      "everythingFlagPermissions": "allow-any",
      "defaultDistance": 0,
      "maxDistance": 0
  },
  //
  // Configure your discord bot(s)
  //
  // prefix - prefix for commands
  // disableAutoGreetings - whether Poracle will greet users who are assigned a role and
  //   get permission to use the bot
  // checkRole - whether to check all discord users for role membership (every _checkRoleInterval_
  //   hours, deleting them if not (note general.roleCheckDeletionsAllowed must be true to
  //   actually carry out the deletions rather than just logging them)
  // token - array of discord tokens - poracle can support any number of bots for transmitting
  //   messages but the first will be used as the command controller
  // guilds - the guilds (servers) that poracle will be on
  // channels - the ids of channels that can be used for the !poracle registration
  // userRoles - roles which will automatically grant poracle access (without registration
  //   required. Can be empty
  // admins - the ids of admins (those who can add channels using !channel add and
  //   perform other admin functions)
  // prefix - the prefix character for poracle commands, usually !
  // ivColors - array of 6 color codes for pokemon IV rankings
  // dmLogChannelID - an ID of a channel to use to log all poracle commands to (to watch
  //   users); dmLogChannelDeletion time - time to clean up after (seconds)
  //
  "discord": {
    "enabled": true,
    "disableAutoGreetings": false,
    "checkRole": false,
    "checkRoleInterval": 6,
    "token": ["discord bot token"],
    "guilds": ["guilds your bot will operate on"],
    "channels": ["channels to listen for poracle activation commands"],
    "userRole": ["roles to grant access for"],
    "admins": ["ids of admin accounts"],
    "prefix": "!",
    "limitSec": 240,
    "limitAmount": 20,
    "ivColors": [
        "#9D9D9D",
        "#FFFFFF",
        "#1EFF00",
        "#0070DD",
        "#A335EE",
        "#FF8000"
    ],
    "dmLogChannelID": "",
    "dmLogChannelDeletionTime": 0
  },

  //
  // Telegram settings
  // checkRole - whether to check all telegram users for membership of a registration group
  //   (every _checkRoleInterval_ hours, deleting them if not (note general.roleCheckDeletionsAllowed
  //   must be true to actually carry out the deletions rather than just logging them)
  // admins - admin user id
  // channels - these are the groups that can be used for registration (it should really
  //   be called groups...). Note if they don't start with -100 then they may not be
  //   supergroups yet - google to find out how to make your group one.
  //   You can get the current group (and your) ids with the /identify command
  // groupWelcomeText - message text (in channel) when someone registers. Users have to
  //   select the 'start' option on the bot in the telegram client before it can message
  //   them and this can be used to remind them of that

  "telegram": {
    "enabled": false,
    "checkRole": false,
    "checkRoleInterval": 6,
    "token": "telegram bot token",
    "admins": ["admin ids"],
    "channels": ["groups to listen in /poracle"],
    "groupWelcomeText": "Remember to click on me and 'start bot' to be able to receive messages"
  },
  //
  // Alert limits - these are so Poracle can limit the amount of messages sent to a user/channel pro-actively
  // to avoid individual users hogging the system (or channel explosions during an event)
  //
  //   timingPeriod - seconds over which limits should be calculated
  //   dmLimit - limit of number of direct messages a user can receive in the period
  //   channelLimit - limit of number of messages a channel/group can receive in the period
  //
  "alertLimits": {
    "timingPeriod": 240,
    "dmLimit": 20,
    "channelLimit": 40
  },
  //
  // geocoding section
  //
  //  provider, providerURL - these are used for address lookups. Can be 'none',
  //   'nominatim' for a local nominatim installation (recommended),
  //   https://github.com/mediagis/nominatim-docker
  //   or google (geocoding key provides an array of google API keys)
  //
  //  staticProvider - this is your provider of map tiles; can be tileservercache
  //   (swift tile server - https://github.com/123FLO321/SwiftTileserverCache)
  //   or google,osm,mapbox - staticKey provides an array of keys to use
  //   width/height/zoom/etc provide parameters for these while tileservercache
  //   uses templates (examples provided in tileservercache_templates folder)
  //
  //  staticMapType - can be either staticMap, multiStaticMap or empty to disable static map creation for this hook
  //  type

    "geocoding": {
      "provider": "none",
      "providerURL": "Your Nominatim Server Address",
      "staticProvider": "none",
      "staticProviderURL": "Your TileServerCache Server Address",
      "staticMapType": {
        "pokemon": "staticMap",
        "raid": "staticMap",
        "pokestop": "staticMap",
        "quest": "staticMap",
        "weather": "staticMap",
        "location": "staticMap"
      },
      "geocodingKey":["Your Google Geocoding Key if you Use google as provider"],

      "staticKey":["Your MapQuest or Google Key"],
      "width": 320,
      "height": 200,
      "zoom": 15,
      "spriteHeight": 20,
      "spriteWidth": 20,
      "scale": 2,
      "type": "klokantech-basic"
    },
  //
  // Fine tuning
  //
  "tuning": {
    "maxDatabaseConnections": 15,
    "webhookProcessingWorkers": 2,
    "concurrentWebhookProcessorsPerWorker": 10,
    "concurrentDiscordDestinationsPerBot": 5,
    "concurrentTelegramDestinationsPerBot": 5,
    "concurrentDiscordWebhookConnections": 10
  }
}
